import { type Keypair } from "@solana/web3.js";
import type { SendTransactionBundlesOptions, SendTransactionsOptions, Transaction, TransactionBundleResponse, TransactionResponse, Transactions } from "./generated";
import type { EdgeClient, SSEOptions } from "./types";
export declare const signTransaction: (transaction: Transaction, signers: Keypair[]) => Transaction;
export declare const signTransactions: (transactions: Transactions, signers: Keypair[]) => Transactions;
export declare const sendTransaction: (client: EdgeClient, transaction: Transaction, signers?: Keypair[], options?: SendTransactionsOptions) => Promise<TransactionResponse>;
export declare const sendTransactions: (client: EdgeClient, transactions: Transactions, signers?: Keypair[], options?: SendTransactionBundlesOptions & Partial<SSEOptions>) => Promise<TransactionBundleResponse[]>;
export declare const sendTransactionsForTests: (client: EdgeClient<true>, transactions: Transactions, signers?: Keypair[], options?: SendTransactionBundlesOptions & Partial<SSEOptions>, cb?: (response: TransactionResponse) => void) => Promise<TransactionBundleResponse[]>;
export declare const sendTransactionForTests: (client: EdgeClient, { blockhash, lastValidBlockHeight, transaction }: Transaction, signers?: Keypair[], options?: SendTransactionBundlesOptions & Partial<SSEOptions>, cb?: (response: TransactionResponse) => void) => Promise<TransactionResponse>;
//# sourceMappingURL=helpers.d.ts.map