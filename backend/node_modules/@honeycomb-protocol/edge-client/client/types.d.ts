import type { getSdk } from "./generated";
import type { OperationContext } from "@urql/core";
export type URQLOptions = OperationContext;
export type SSEOptions = {
    streamCallback: (data: any) => void;
};
export type EdgeClientRequestOptions<EnableSSE extends boolean = true> = EnableSSE extends true ? (URQLOptions & SSEOptions) : URQLOptions;
export type SSEDependendFuncs = "sendTransactionBundles" | "signWithShadowSignerAndSendTransactionBundles";
export declare const sseDependendFuncs: SSEDependendFuncs[];
export type EdgeClientSSEFuncs = Pick<ReturnType<typeof getSdk<Partial<SSEOptions>>>, SSEDependendFuncs>;
export type EdgeClient<EnableSSE extends boolean = true, SDK = ReturnType<typeof getSdk<Partial<EdgeClientRequestOptions<EnableSSE>>>>> = EnableSSE extends true ? SDK : Omit<SDK, SSEDependendFuncs>;
//# sourceMappingURL=types.d.ts.map